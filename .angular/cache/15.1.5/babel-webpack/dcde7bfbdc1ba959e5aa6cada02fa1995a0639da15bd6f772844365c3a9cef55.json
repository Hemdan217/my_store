{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CartService {\n  getcartProducts() {\n    return this.cartProducts;\n  }\n  addToCart(product) {\n    if (product.added != 'yes') {\n      product.added = 'yes';\n      this.cartProducts.push(product);\n    }\n    return this.cartProducts;\n  }\n  updateQuantity(product, quantity) {\n    return this.cartProducts;\n  }\n  clearCart() {\n    this.cartProducts = [];\n    return this.cartProducts;\n  }\n  constructor() {\n    this.cartProducts = [];\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,eAAe;IACb,OAAO,IAAI,CAACC,YAAY;EAC1B;EAEAC,SAAS,CAACC,OAAgB;IACxB,IAAIA,OAAO,CAACC,KAAK,IAAI,KAAK,EAAE;MAC1BD,OAAO,CAACC,KAAK,GAAG,KAAK;MACrB,IAAI,CAACH,YAAY,CAACI,IAAI,CAACF,OAAO,CAAC;;IAGjC,OAAO,IAAI,CAACF,YAAY;EAC1B;EACAK,cAAc,CAACH,OAAgB,EAAEI,QAAgB;IAC/C,OAAO,IAAI,CAACN,YAAY;EAC1B;EAEAO,SAAS;IACP,IAAI,CAACP,YAAY,GAAG,EAAE;IACtB,OAAO,IAAI,CAACA,YAAY;EAC1B;EACAQ;IArBA,iBAAY,GAAc,EAAE;EAqBb;;AAtBJV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAW,SAAXX,WAAW;EAAAY,YAFV;AAAM","names":["CartService","getcartProducts","cartProducts","addToCart","product","added","push","updateQuantity","quantity","clearCart","constructor","factory","providedIn"],"sourceRoot":"","sources":["D:\\C3 Angular Fundamentals\\my_store\\store\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Product } from '../models/productModel';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  cartProducts: Product[] = [];\n  getcartProducts() {\n    return this.cartProducts;\n  }\n\n  addToCart(product: Product) {\n    if (product.added != 'yes') {\n      product.added = 'yes';\n      this.cartProducts.push(product);\n    }\n\n    return this.cartProducts;\n  }\n  updateQuantity(product: Product, quantity: number) {\n    return this.cartProducts;\n  }\n\n  clearCart() {\n    this.cartProducts = [];\n    return this.cartProducts;\n  }\n  constructor() {}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}